<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="playerPictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="cutscene_media_windowsMediaPlayer.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAtwAAAAIB
        AAAAAQAAAAAAAAAAAAAAAKIAAAABAwAACAAAAAAABQAAAAAAAADwPwMAAAAAAAUAAAAAAAAAAAAIAAIA
        AAAAAAMAAQAAAAsA//8DAAAAAAALAP//CAACAAAAAAADADIAAAALAAAACAAKAAAAbgBvAG4AZQAAAAsA
        AAALAAAACwD//wsA//8LAAAACAACAAAAAAAIAAIAAAAAAAgAAgAAAAAACAACAAAAAAALAAAAS4QAAGpK
        AAAL
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AADoowX/6qsY/+yzLv/hogj/uZAQ/41xO/9lY0z/SHk5/zqKFf8zmQr/L6IM/yyoDv8rqg//K6oP/yuq
        D/8rqg//K6oP/yuqD/8rqg//K6oP/yuqD/8rqg//K6oP/yuqD/8rqg//K6oP/yuqD/8rqQ//MpwK/zGe
        C/8sqA7/K6oP/+mmC//ppAf/6qwb/+moEP/noQD/2JwD/7OOEv+shCP/eHcq/0V+JP8xmxb/K6kQ/yqr
        Dv8qqw7/K6oP/yynDv8tpg3/LacO/yuqD/8rqg//K6oP/yuqD/8rqg//K6oP/yuqD/8rqg//K6oP/yuq
        D/8sqA7/MpsK/y2lDf8rqg//6KQF/+mnDf/joQD/6KIB/+qnD//rriH/6aUH/+ujAP/dnw7/l4Ai/2Rv
        Pf9Sejj/PIwq/zKZH/8spBT/LKgN/zGdCf8zmwn/LqMM/yuqD/8rqg//LacO/yyoDv8rqg//K6oP/yuq
        D/8rqg//K6oP/yuqD/8spw7/K6kP/yuqD//ppQb/6a0e/+ikBP/ppw7/6aYK/+utH//qqBL/6KIA/+mj
        Af/angL/zJcK/8GPGv+afTH/gnI6/15yPv9BgzL/NZQe/zCfEv8tpQz/K6sO/zChDP80mAn/MZ4L/yyq
        D/8rqg//K6oP/yuqD/8rqg//K6oP/yuqD/8sqA7/K6oP/7iFNf/HlA7/4qEB/+miAP/qqBD/66wZ/+mj
        Af/oogD/6KQE/+ywJv/qpQj/6qkR/+y0Mf/hoAj/zJMU/5x/Kv99cjn/X3I//0GDMf8uoBb/LqML/zGe
        C/8vogz/LKgO/yuqD/8rqg//K6oP/yuqD/8rqQ//MZ4L/zGdC/8sqQ7/SIwv/39/QP+Zgi3/1JYP/+ih
        EP/fpBP/4aAD/+mjBP/ppAT/7K8h/+yxJ//oogH/6aUH/+iiAf/qqRL/7rY0/+WqIv/QlhP/onwt/11v
        Qf83kyT/K6kP/yurD/8rqg//K6oP/yuqD/8rqg//K6oP/yupD/8vogz/LqQN/yypDv8towz/LaUS/zuV
        JP93gj3/jYI9/5SAOv+bgzj/qII6/8SGL//fmA//5aEB/+mkAv/rrRz/6acO/+iiAf/mpAj/3Kka/+qm
        B//oogH/u4sZ/2ZoRf9GeTr/L6AX/yurDv8rqg//K6oP/yyoDv8sqA7/K6oP/yuqD/8rqg//K6oP/zKd
        Cv8uowz/K6oO/yuoEf8tphT/M6MZ/zSjGf83nB//XII+/4d8Rv+sgjj/xYor/+WnJ//tuDr/6qsY/+Wh
        AP/cnwD/6KEA/+mkBf/irSH/q4oZ/3hlSv9PcUT/MZ4Z/yurD/8rqg//MJ8L/zSXCP8tpw7/K6oP/yuq
        D/8rqg//LKkP/yuqD/8rqg//K6oP/yuqD/8rqw7/LKgN/yqrDv8qqg//LqUU/zmdH/9ThTL/mXs5/8uU
        Fv/ppgj/6aIA/+unDv/sszD/6aYM/+qoD//powH/2JoM/6B/M/9dbEj/NZMi/yqrDv8tpg3/MKAL/y2m
        Df8rqg//K6oP/yuqD/8rqQ//LqUN/y2mDv8rqQ//K6kQ/yqgF/8ymgv/LKMK/ympDP8qqg3/KqsO/yuo
        Df84mB7/enxA/8eKMP/bmBX/4KIG/+yuHv/oqxn/56EA/+mkBP/qpgj/56IC/7CEKv9aaUf/Mpoc/yqr
        Dv8rqg//K6oP/yurDv8rqw7/K6sN/y2mDf8wnwv/MKAM/y6nDP8mii//Gz50/yRnTP9NtDf/ULk6/zmv
        KP8qqRf/LKsO/y6kC/8xnhf/T44w/3R9RP+wgjT/2JIY/9mbBf/kowP/66kR/+mkBP/qpgn/56gV/6aC
        If9Tczz/LaMV/yurDv8sphf/LaEf/y6dJf8vli//K6oP/zCgDP8ymwr/KZwQ/yKAKf8bTGT/T3OM/9Dd
        z//I3N7/gLfQ/z+fZP8jexf/Mp8L/y+mDP8qrg3/LqcV/0yWLP9kijr/l3tA/8ONJv/goR3/5J4G/+Cg
        DP/lpRb/46AC/519NP9Efzf/MoNN/zdpcv84YH3/OF1//zlZhv8srBH/MKkQ/zGxD/8gfR7/GWQm/y20
        Ef9CfDf/cG5w/6mprP+1uL3/ebJ7/xFLKP8vuRH/ML8R/y+/Ef8vvhH/OLUY/1OaMv+Mamb/nGRr/6dr
        YP+tb1r/rG9Z/65wVv+4eEr/tHpH/3ZlXP9NXYH/OlaO/zpWjP84VIj/OlaM/zC+Ev8wwBL/McQQ/yGF
        IP8ZZif/MscQ/x5+Cf8EDgD/ExQR/zRHL/8xhSn/EEYv/y63FP8wwhH/LsMP/0ymKv+KcWD/mmRu/55i
        cv+dYnH/nGFy/5xhcv+cYXL/nGFz/5xhc/+cYXL/nWJw/4Vgef9BWIz/OliN/zlWiv86V4v/MMER/zDB
        Ef8wwRH/GGIp/w02N/8eeCP/HXcg/wciFv8FGg//E1UZ/xNOLP8RRDH/LrwR/zG/Ev86tRr/b4dJ/59g
        c/+dYnH/nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51icf+eYnH/lWJ0/0tZiP85Vov/OleM/zlW
        iv8wwRH/MMMR/yqqFv8PMEX/Jzx3/yc5dv8nOXX/JD5u/x0vYv8lOXH/JjZ2/xtiMf9BsR//cYVL/45u
        ZP+aZG//nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51icf+YYnL/WFuG/zlX
        jf88WpH/OleM/zDBEf8wwxH/KKMX/xUvUf85VIj/O1mM/ztai/88WI//OlSI/ztZjf8vR33/PUlJ/41x
        Yv+eYXL/nmFy/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/55i
        cf+EYHr/QFmN/ztZkP87WI7/MMER/zDDEf8oohb/GDJY/z1Zlv87WZP/PFuU/zxYmP87WZD/QFyZ/zFM
        hP9eQl7/oGNy/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51i
        cf+dYnH/nmJx/5Fhdf9HWYr/OVaL/zpXi/8wwRH/McQQ/ySUGv8ZK2P/M1CB/zlViP86VZb/PVec/z5b
        lv8+W4//KEB1/2JBYP+gY3L/nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51i
        cf+dYnH/nWJx/51icf+cYnD/mWJw/1tcgf84V4r/O1iP/zDBEf8wwhH/LrgT/x5pM/8bPFX/IDBj/yY1
        cP8rPHD/LkVw/zJIiv8WJWD/akNh/6Bkcv+dYnH/nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51i
        cf+dYnH/nWJx/51icf+dYnH/nWJx/41nXv+JaVf/amNt/zpiY/88Ym3/MMER/zDBEf8wwhH/LcEP/zuc
        I/9zWFz/cEVi/3xNZf+AUGb/ZkJs/1A0X/+NWGv/nmNx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51i
        cf+dYnH/nWJx/51icf+dYnH/nWJx/51icf+ZY23/hGpT/4FrTv9gbUX/PXEv/z91Jv8wwRH/MMER/y/B
        Ef9FrCT/fH5U/59jcv+fZHL/n2Ny/59jcv+fY3H/nmNx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51i
        cf+dYnH/nWJx/51icf+dYnH/nWJx/51icf+dYnH/m2Nv/4poWv9wcDr/Z3Mv/1F5GP8+gRL/O4gd/zDB
        Ef8zvRT/XZc5/5FrZ/+eYXL/nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51i
        cf+dYXD/nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/55icv+MaFz/cHA6/1d6Hf9DjAz/QYME/z+G
        Av89iwb/LcMP/1SeMf+aZG7/nmFy/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51i
        cf+cYHD/nmV0/6Jue/+eY3L/nWFw/51icf+dYnH/nWJx/51icf+dYnH/mmNt/2p5N/9GiQ//RX8H/z2K
        Av88kQT/PogC/0B/AP8/sh7/eX9S/55hcv+dYnH/nWJx/51icf+dYnH/nWJx/51icf+dYnH/nWJx/51i
        cf+dYXD/nmV0/6h/iv+2oab/vbW3/7Seo/+rhY7/nmV0/51icf+dYnH/nWJx/55icv+SZWT/W3sj/0WE
        Cv9BfwH/QH8A/0CBAP8/ggH/QIAA/41uY/+dYnH/nWFw/51hcP+dYnH/nWJx/5xhcP+dYXD/nWJx/51i
        cf+dYnH/nWFx/6Jue/+1n6X/wsDA/8PExP/DxMT/xMTE/8LBwf+siJH/nGFw/51icf+dYnH/nmJy/4to
        XP9Rfhj/SH0L/0GBAv89jQP/P4IB/zuUBf8/hQL/nmFx/55jcv+hbXr/o3J+/59odv+faHb/p3uG/6Z5
        hP+eZXP/nWJx/51icf+dYnH/sZad/8TGxf/DxMP/w8TE/8TExP/DxMP/wL2+/6yHkf+cYXD/nWJx/51i
        cf+eYnH/hGxT/1aKJv9JgAz/QIIB/z2LA/9AgQD/P4QB/0CAAP+fZ3X/sZSb/761uP+/urv/u62x/7qt
        sP/Bv7//wb2+/6+QmP+dY3L/nWJx/51icf+meIT/u7Cz/8K/wP++trj/uKes/66Olv+ld4P/nmVz/51i
        cf+dYnH/nWFw/51hcP+FalT/aXMy/017EP8/gAD/PY0E/z+EAf9AgAD/PokC/62Mlf/CwcL/w8TE/8PE
        w//DxMT/w8TE/8PDw//DxMT/v7m7/6Nyf/+cYXD/nWJx/51hcP+ibnv/p3qG/6Jue/+eZXP/nWFw/5xg
        b/+ib3z/tJyi/7Sdo/+ymJ7/qICJ/4JsUP9heiv/SYYQ/0J/A/9AiQX/P4MB/0N/A/89jQP/t6ar/8TF
        xf/Dw8P/w8PD/8PExP/ExcT/w8TE/8PExP/Cv8D/pnqF/5xhcP+dYnH/nWJx/51hcP+cYXD/nWFw/51i
        cf+dYnH/nGBw/6yIkf/ExcT/xMXE/8TFxP/Bvb//mJV7/19+Kv9Cigr/RH8G/0GCAv9AfwD/QIAA/z+D
        Af+ti5T/u6+y/8LBwf/Cv8D/vLCz/7inrP+9s7X/v7q7/7emqv+ga3j/nWFw/51icf+dYnH/nWJx/51i
        cf+dYnH/nWJx/51icf+dYXD/oW16/7mprf/Dw8P/w8TE/8XFxv+ys6f/bnk7/0x/EP9BhgX/O5QF/z2N
        BP8/gwH/O5EF/51jcv+ha3n/rYqT/6qEjv+hbHn/nmV0/6Ftev+kdID/oGp4/51icf+dYnH/nWJx/51i
        cf+dYnH/nWJx/51icf+dYnH/nWJx/51icf+dYXD/om57/7GVnP+2o6j/t6Go/5uJe/9kdy3/RJQT/0SD
        B/9EgQb/RY0O/0WCCP9BgQL/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>